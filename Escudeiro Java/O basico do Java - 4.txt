Durante muito tempo, uma das maiores dificuldades na hora de programar era o gerenciamento de memória. 
Os desenvolvedores eram responsáveis pela sua alocação e liberação manualmente, o que levava a muitos  
erros e memory leaks. Hoje, em todas as plataformas modernas (incluindo Java), temos gerenciamento de  
memória automático através de algoritmos de coleta de lixo.						
Pesquise sobre Garbage Collector e faça uma explanação de como este algoritmo funciona na plataforma Java. 
Também implemente dois algoritmos em Java: um que exemplifique um possível erro de OutOfMemoryError e 
outro que mostre os cuidados tomados para não acontecer este tipo de erro durante o desenvolvimento de software.

r: Garbage Collectors são algoritmos de desalocação de memória, a MV controla a alocação de memória que
o programa vai utilizar. Quando um método que utiliza um objeto é finalizado, ocorre uma exceção ou 
o número de referências a um determinado objeto cai a zero, esse objeto é passível de ser coletado pelo 
Garbage Collector que varre a pilha de execução para encontrar os objetos sem referência e devolver o 
endereço de memória aos endereços disponiveis do heap de memória. 

Exemplo de erro de OutOfMemoryError:



https://www.devmedia.com.br/garbage-collection-entendendo-e-otimizando-parte-1/24082
https://www.geeksforgeeks.org/understanding-outofmemoryerror-exception-java/